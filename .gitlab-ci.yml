image: python:3.9

stages:
  - build
  - testing
  - deploy

# Etapa de build
build:
  tags:
    - cicd  # Etiqueta agregada para el runner
  stage: build
  script:
    - whoami
    - pwd
  only:
    - main

# Etapa de testing con pytest
testing:
  tags:
    - cicd  # Etiqueta agregada para el runner
  stage: testing
  script:
    - python -m venv venv  # Crea el entorno virtual
    - source venv/bin/activate  # Activa el entorno virtual
    - export PYTHONPATH=$PYTHONPATH:$CI_PROJECT_DIR  # AÃ±ade el directorio del proyecto al PYTHONPATH
    - pip install -r requirements.txt  # Instala las dependencias necesarias
    - pytest --maxfail=1 --disable-warnings  # Ejecuta pytest
  only:
    - main

# Etapa de deploy usando SSH y rsync
deploy:
  tags:
    - cicd  # Usa el runner existente
  stage: deploy
  before_script:
    - apt-get update && apt-get install -y rsync openssh-client  # Instala rsync y SSH
    - mkdir -p ~/.ssh  # Crea el directorio SSH
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa  # Agrega la clave SSH privada
    - chmod 600 ~/.ssh/id_rsa  # Asegura los permisos correctos de la clave
    - ssh-keyscan -H 34.44.156.58 >> ~/.ssh/known_hosts  # Agrega tu servidor a los hosts conocidos
  script:
    - whoami
    - rsync -Pavz -e "ssh -o StrictHostKeyChecking=no" frontend/ moha251mmed@34.44.156.58:/var/frontend/  # Copia la carpeta frontend
    - rsync -Pavz -e "ssh -o StrictHostKeyChecking=no" api/ moha251mmed@34.44.156.58:/var/api/  # Copia la carpeta api
  when: manual
  only:
    - main